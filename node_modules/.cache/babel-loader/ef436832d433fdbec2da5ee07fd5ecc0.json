{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bekon Rexha\\\\Documents\\\\GitHub\\\\food-ordering-app\\\\src\\\\components\\\\CheckoutPage\\\\CheckoutPage.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./CheckoutPage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst CheckoutPage = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      z: true,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainpage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: confirmHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: nameControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            ref: nameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid name!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: streetControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            ref: streetInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid street!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: postalCodeControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"postal\",\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"postal\",\n            ref: postalCodeInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid postal code (5 characters long)!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cityControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            ref: cityInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid city!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: props.onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.submit,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutPage, \"HrmUUQKM0w7VSAcs5yd+fp84/4w=\");\n\n_c = CheckoutPage;\nexport default CheckoutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"sources":["C:/Users/Bekon Rexha/Documents/GitHub/food-ordering-app/src/components/CheckoutPage/CheckoutPage.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","CheckoutPage","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","cartItems","cartCtx","items","map","item","amount","price","cartItemRemoveHandler","bind","id","cartItemAddHandler","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","mainpage","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\n\r\nimport classes from \"./CheckoutPage.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst CheckoutPage = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          z\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode,\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <div className={classes.mainpage}>\r\n        <div><h2>{cartItems}</h2></div>\r\n      <div>\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n          <div className={nameControlClasses}>\r\n            <label htmlFor=\"name\">Your Name</label>\r\n            <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n            {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n          </div>\r\n          <div className={streetControlClasses}>\r\n            <label htmlFor=\"street\">Street</label>\r\n            <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n            {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n          </div>\r\n          <div className={postalCodeControlClasses}>\r\n            <label htmlFor=\"postal\">Postal Code</label>\r\n            <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n            {!formInputsValidity.postalCode && (\r\n              <p>Please enter a valid postal code (5 characters long)!</p>\r\n            )}\r\n          </div>\r\n          <div className={cityControlClasses}>\r\n            <label htmlFor=\"city\">City</label>\r\n            <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n            {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button type=\"button\" onClick={props.onCancel}>\r\n              Cancel\r\n            </button>\r\n            <button className={classes.submit}>Confirm</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"]},"metadata":{},"sourceType":"module"}