{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bekon Rexha\\\\Documents\\\\GitHub\\\\food-ordering-app\\\\src\\\\components\\\\CheckoutPage\\\\CheckoutPage.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useContext } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport classes from \"./CheckoutPage.module.css\";\nimport CartItem from \"../Cart/CartItem\";\nimport { Link, Navigate, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst CheckoutPage = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const cartCtx = useContext(CartContext);\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.items,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.amount,\n          children: [\"x\", item.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"$ \", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    const userData = {\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    };\n\n    const submitHandler = async userData => {\n      await fetch(\"https://food-ordering-app-21d93-default-rtdb.europe-west1.firebasedatabase.app/orders.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartCtx.items\n        })\n      });\n    };\n\n    submitHandler(userData);\n\n    /*#__PURE__*/\n    _jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this);\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainpage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.item1,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Amount: \", totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.item2,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: confirmHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: nameControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            ref: nameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid name!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: streetControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"street\",\n            ref: streetInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid street!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: postalCodeControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"postal\",\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"postal\",\n            ref: postalCodeInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid postal code (5 characters long)!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cityControlClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"city\",\n            ref: cityInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please enter a valid city!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.submit,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutPage, \"HB1suzZgTXU+32uCJKN9A8SaJ3o=\");\n\n_c = CheckoutPage;\nexport default CheckoutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"sources":["C:/Users/Bekon Rexha/Documents/GitHub/food-ordering-app/src/components/CheckoutPage/CheckoutPage.js"],"names":["useRef","useState","useContext","CartContext","classes","CartItem","Link","Navigate","Switch","isEmpty","value","trim","isFiveChars","length","CheckoutPage","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","cartCtx","cartItems","items","map","item","amount","price","totalAmount","toFixed","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","userData","submitHandler","fetch","method","body","JSON","stringify","user","orderedItems","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","mainpage","item1","item2","form","actions","submit"],"mappings":"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","sourcesContent":["import { useRef, useState, useContext } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport classes from \"./CheckoutPage.module.css\";\r\nimport CartItem from \"../Cart/CartItem\";\r\nimport { Link, Navigate , Switch } from \"react-router-dom\";\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst CheckoutPage = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const cartCtx = useContext(CartContext);\r\n  const cartItems = (\r\n    <ul>\r\n      {cartCtx.items.map((item) => (\r\n        <li className={classes.items}>\r\n          <div>\r\n            <h2>{item.name}</h2>\r\n            <h2 className={classes.amount}>x{item.amount}</h2>\r\n          </div>\r\n          <div>\r\n            <h2>$ {item.price}</h2>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    const userData = ({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      city: enteredCity,\r\n      postalCode: enteredPostalCode,\r\n    });\r\n\r\n    const submitHandler = async (userData) => {\r\n        await fetch(\r\n          \"https://food-ordering-app-21d93-default-rtdb.europe-west1.firebasedatabase.app/orders.json\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              user: userData,\r\n              orderedItems: cartCtx.items,\r\n            }),\r\n          }\r\n        );\r\n      };\r\n    submitHandler(userData);\r\n    <Navigate  to=\"/\" />\r\n  };\r\n\r\n  \r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <div className={classes.mainpage}>\r\n      <div className={classes.item1}>\r\n        <h2>{cartItems}</h2>\r\n        <h2>Total Amount: {totalAmount}</h2>\r\n      </div>\r\n      <div className={classes.item2}>\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n          <div className={nameControlClasses}>\r\n            <label htmlFor=\"name\">Your Name</label>\r\n            <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n            {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n          </div>\r\n          <div className={streetControlClasses}>\r\n            <label htmlFor=\"street\">Street</label>\r\n            <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n            {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n          </div>\r\n          <div className={postalCodeControlClasses}>\r\n            <label htmlFor=\"postal\">Postal Code</label>\r\n            <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n            {!formInputsValidity.postalCode && (\r\n              <p>Please enter a valid postal code (5 characters long)!</p>\r\n            )}\r\n          </div>\r\n          <div className={cityControlClasses}>\r\n            <label htmlFor=\"city\">City</label>\r\n            <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n            {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <Link to=\"/\">\r\n              <button type=\"button\">\r\n                Cancel\r\n              </button>\r\n            </Link>\r\n            <button className={classes.submit}><Link to=\"/\">Confirm</Link></button>\r\n            \r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"]},"metadata":{},"sourceType":"module"}